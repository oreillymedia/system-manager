## General Settings

# username of main user you do everything as
local_user: username

# GPG public key ring (~/.gnupg/pubring.kbx)
gpg_public_key_ring: none

# SSH authorized keys file (~/.ssh/authorized_keys)
ssh_authorized_keys: none

# configure the root user as well as the local_user when setting up
# shells/configs
configure_root: true

# Standard system locale
# https://wiki.archlinux.org/index.php/Locale
system_locale: en_US.UTF-8

# enable tmux support
use_tmux: false

# enable powerline suport
use_powerline: false

# powerline colors
powerline_colorscheme: default
powerline_prompt_bg_color: 'darkblue'
powerline_prompt_bg_color_root: 'red'
powerline_xonsh_prompt_bg_color: '#0087af'
powerline_xonsh_prompt_bg_color_root: 'RED'


## Pacman AUR settings
# Only applies to Arch Linux

# must be one of the AUR Helpers supported by ansible-aur:
# https://github.com/kewlfft/ansible-aur
# yay, aurman, pacaur, trizen, pikaur
aur_builder: pikaur

# user to use when installing AUR packages,
# will automatically be created and given correct permissions
# should not be main user as it will also be excluded from Login Screen
aur_user: aur


## X11 Forwarding settings

# Install X11 helper script to install, useful if you plan to run remote
# X11 applications on your local
x11_copy_script: true

# dictionary of short names for various SSH hosts for X11/GPG helper scripts
host_aliases:
 - { alias: local, host: 127.0.0.1 }

# Enable X11 forwaring over SSH on your local system. You must be running
# sshd for this to work
x11_enable_forwarding: true


## Shell settings

# default login shell for the user
# supported default shells: bash, zsh
# set to 'none' if you do not want to change your default shell
default_shell: bash

# secondary shell is a unstable non-login shell that gets loaded in rc file
# for login shell
# supported default shells: xonsh
# set to 'none' if you do not want to configure a secondary shell
secondary_shell: none

# additional shells to config
# can be any values of default/secondary shells
# must include default and secondary shell vars from above
# set to blank if you do not want to configure shells
enabled_shells:
  - bash
  - zsh


## Git Settings

# name and email for git
# set both to 'none' to skip configuring Git
git_email: none
git_name: none

# public GPG signing key to use for git
# Set this to 'none', but above if you want to configure git
# without a signing key
git_signing_key: none


## GPG Helper settings

# Location of GPG agents for gpg-remote helper script
# default location locally is /run/user/1000/gnupg/S.gpg-agent
#   where 1000 = your user's uid
gpg_local_agent: none
gpg_remote_agent: none

# WSL specific GPG settings to get Windows 10 GPG Agent in WSL
# See https://codingnest.com/how-to-use-gpg-with-yubikey-wsl/ for setup
wsl_npiperelay_path: none
windows_gpg_agent_path: none


## Cloud Provider Settings

# cloud provider(s) to configure
# supported: onedrive
# set to empty value to not install a cloud provider
cloud_providers:

# Absolute path to sync list file
# https://github.com/abraunegg/onedrive/blob/master/docs/USAGE.md#selective-sync
# Ubuntu requires 19.04
onedrive_sync_list: none


## Desktop Settings

# DEs to install and setup
# supported: kde, gnome, gnome-ubuntu
# only applies to Linux
# gnome-ubuntu is only avaible for Ubuntu. It installs the default full GNOME DE that comes with Ubuntu
# set to empty value to not manage desktop environments
# NOTE: GNOME does not support managing themes
desktop_environments:
# - kde

# KDE theme to install
# path must end in /
#
# This theme is only copied over, you still have to manually
# enable it in system settings
kde_theme: none

# Display Manager to use
# supported: sddm, gdm
# only applies to Linux
# set to 'none' to not configure display manager
# NOTE: See "Changing Display Managers" in README about changing your default
# NOTE: GDE does not support managing themes
desktop_display_manager: none

# Whether or not you already have Plymouth installed and configured
# (if you are on Ubuntu, the answer is probably yes)
desktop_display_manager_use_plymouth: true

# Display Manager theme to install
# path must end in /
# Theme must be fore the display manager you selected above
desktop_display_manager_theme: none

# Path to PNG image to use for User Icon
desktop_display_manager_user_icon: none

# Network Manager to use
# supported: networkmanager
# only applies to Linux
# set to 'none' to not configure network manager
desktop_network_manager: none

# Network Manager connection configs
# Set to empty to not configure any connections
network_manager_configs:


## Graphics Drivers Settings
# WARNING: Only support open source drivers
install_intel_drivers: false

install_nvidia_drivers: false


## Extras Settings

# Add extra PPA repos, Ubuntu only
# set to empty to skip
extra_ppas:

# Install list of arbitary packages
# set to empty to not install any
extra_packages:

# Set to 'none' to skip installing AUR packages
extra_aur_packages: none

# extra arbitary user directories to make relative to ~
# set to empty to not create any
extra_user_dirs:

# extra arbitary user files to copy
# set to empty to not copy any
extra_user_files:
# - { src: pip.conf, dest: .pip/pip.conf }

# extra arbitary system files to copy
# set to empty to not copy any
extra_system_files:
- { src: user/mortis-configs/pam/arch/sudo, dest: /etc/pam.d/sudo }
- { src: user/mortis-configs/pam/arch/system-login, dest: /etc/pam.d/system-login }


## Network Utils Settings

# Install and set up OpenSSH Server
setup_sshd: false

# Install and set up Samba Network Shares
setup_samba: false

# path to optional Samba config
# set to 'none' to not copy one
samba_config: none

# Install and setup iptable filewall
setup_iptables: false

# IP address or network range (CIDR) of IP addresses without restrictions
# set empty to not have any
iptables_whitelisted_networks:


## Dev Utils Settings

# setup and install Docker
setup_docker: true

# optional Docker daemon.json file
# set to 'none' to use the default ORM one
docker_config: none

# optional extra docker host option (-H)
# set to 'none' to only run on default
# unix socket (unix:///var/run/docker.sock)
extra_docker_host: none

# setup and install NodeJS
setup_nodejs: true

# setup and install Kubernetes
setup_k8s: true

# setup and install Google Cloud SDK
setup_gcloud: true

# list of git repos to clone
git_repos:
# - { url: "git@github.com:AngellusMortis/system-manager.git", dest: dev/system-manager, branch: master }


## Extra Personalization settings

# Grub background
# WARNING: Do NOT set a Grub background and a Grub theme
grub_background: none

# Grub theme to install
# path must end in /
# there must be a theme.txt file
grub_theme: none

# Plymouth theme to install
# path must end in /
# there must be a theme.txt file
plymouth_theme: none
